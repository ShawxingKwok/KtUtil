import org.jetbrains.dokka.DokkaConfiguration.Visibility
import org.jetbrains.dokka.gradle.DokkaTask

buildscript {
    ext {
        version_kt = '1.8.0'
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version "$version_kt"
    id("org.jetbrains.dokka") version "1.7.20"
    id "com.vanniktech.maven.publish" version "0.25.2"
}

repositories {
    mavenCentral()
}

group = 'io.github.shawxingkwok'
version = '1.0-SNAPSHOT'

kotlin {
    explicitApiWarning()

    jvm {
        compilations.configureEach {
            kotlinOptions.jvmTarget = '1.8'
        }
        withJava()
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }

    js(IR) {
        browser {
            commonWebpackConfig {
                cssSupport {
                    it.enabled.set(true)
                }
            }
        }
    }

    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    def nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    sourceSets.configureEach {
        languageSettings.optIn("kotlin.contracts.ExperimentalContracts")
    }

    sourceSets {
        commonMain {
            dependencies {}
        }
        commonTest {
            dependencies {
                implementation kotlin('test')
            }
        }
        jvmMain {

        }
        jvmTest {

        }
        jsMain {

        }
        jsTest {

        }
        nativeMain {

        }
        nativeTest {

        }
    }
}

// dokka
tasks.withType(DokkaTask).configureEach {
    suppressInheritedMembers.set(true)

    outputDirectory.set(file("/Users/william/IdeaProjects/library/ITWorks/content/docs/ktutil/html"))

    dokkaSourceSets.configureEach {
        documentedVisibilities.set([
                Visibility.PUBLIC,
                Visibility.PROTECTED,
        ])

        perPackageOption {
            matchingRegex.set(".*internal.*")
            suppress.set(true)
        }
    }
}

// publish
mavenPublishing {
    coordinates("io.github.shawxingkwok", "ktx", "1.0.0-SNAPSHOT")
    pom {
        name = "Personal kt util"
        description = ""
        inceptionYear = "2023"
    }
}